s = [
    "    𜸜 𜸜𜸜    𜸚𜸺𜸤𜹇 𜹇𜸚𜸤  𜸜  𜸚𜸥𜸞𜸤     𜸣           𜸣 ",
    "    𜸩    𜸺𜸺 𜸾𜸺𜸤𜸬𜸴𜸻𜸮𜹀𜸺    𜸩  𜸩 𜸪𜸲𜸸𜸞𜸺𜸥   𜸞𜸟𜸥   𜸞𜸟𜸥",
    "    𜹊    𜸺𜸺 𜸾𜸺𜹃𜹐 𜹐𜸾𜸟𜹃    𜸾𜸥𜸞𜹃     𜸭  𜹃     ▘  𜸭 ",
    "𜸚𜸟𜸤 𜸦 𜸚𜸟𜸤𜸚𜸟𜸤𜸜 𜸜𜸛𜸟𜸥𜸚𜸟𜸤𜸞𜸟𜸧𜸚𜸟𜸤𜸚𜸟𜸤       𜸬     𜸢 𜸚𜸟𜸤",
    "𜸩 𜸩 𜸩 𜸚𜸟𜹃 𜸟𜸷𜸽𜸟𜸺𜸽𜸟𜸤𜸨𜸟𜸤 𜸵𜸻𜸮𜸟𜸷𜸾𜸟𜸶 ▘  𜹐  𜸫 𜸞𜸟𜸥 𜸻  𜸵𜸻",
    "𜸾𜸟𜹃 𜸼 𜸽𜸟𜸥𜸾𜸟𜹃  𜸼𜸾𜸟𜹃𜸾𜸟𜹃 𜸼 𜸾𜸟𜹃𜸾𜸟𜹃 ▘  𜹃    𜸞𜸟𜸥    𜹊 ",
    "𜸚𜸟𜸤𜸚𜸟𜸤𜸛𜸟𜸤𜸚𜸟𜸤𜸛𜸟𜸤𜸛𜸟𜸥𜸛𜸟𜸥𜸚𜸟𜸤𜸜 𜸜 𜸠   𜸜𜸜 𜸜𜸜  𜸝𜸡𜸦𜸝𜸢𜸜𜸛𜸟𜸧",
    "𜸚𜸧𜸩𜸨𜸟𜸶𜸨𜸟𜸷𜸩  𜸩 𜸩𜸨𜸟 𜸨𜸟 𜸩 𜸧𜸨𜸟𜸶 𜸩   𜸩𜸨𜸯𜸸𜸩  𜸩𜸰𜸩𜸩𜸫𜸹𜸩 𜸩",
    "𜸾𜹀𜹃𜸼 𜸼𜸽𜸟𜹃𜸾𜸟𜹃𜸽𜸟𜹃𜸽𜸟𜸥𜸼  𜸾𜸟𜹃𜸼 𜸼 𜹀 𜸾𜸟𜹃𜸼 𜸼𜸽𜸟𜸥𜸼 𜸼𜸼 𜸼𜸽𜸟𜹄",
    "𜸛𜸟𜸤𜸚𜸟𜸤𜸛𜸟𜸤𜸚𜸟𜸤𜸞𜸠𜸥𜸜 𜸜𜸜 𜸜𜸜 𜸜𜸜 𜸜𜸜 𜸜𜸛𜸟𜸧 𜸛𜸥𜸜  𜸞𜸧  𜸱    ",
    "𜸨𜸟𜹃𜸩 𜸩𜸨𜸟𜸷𜸾𜸟𜸤 𜸩 𜸩 𜸩𜸩 𜸩𜸩𜸱𜸩𜸪𜸲𜸸𜸫𜸳𜸻𜸬𜸴𜸻 𜸩 𜸫𜸲𜸢 𜸩  𜹂    ",
    "𜸼  𜸾𜸟𜹅𜸼 𜸼𜸾𜸟𜹃 𜸼 𜸾𜸟𜹃𜸫𜹁𜸻𜸿𜹂𜹆𜸼 𜸼 𜸼 𜸽𜸟𜹄 𜸽𜸥  𜸼𜸞𜹄    ▀▀▀",
    " 𜸤    𜸜      𜸜    𜸚𜸤    𜸜   𜸣  𜸣 𜸜   𜸜          ",
    "   𜸚𜸧 𜸨𜸤 𜸚𜸥 𜸚𜸶 𜸚𜸤 𜸺  𜸚𜸧 𜸨𜸤  𜸜  𜸜 𜸨𜸷  𜸩 𜸝𜸦 𜸛𜸤 𜸚𜸤 ",
    "   𜸾𜹄 𜸽𜹃 𜸾𜸥 𜸾𜹄 𜸾𜸥 𜸼  𜸾𜸶 𜸼𜸼  𜸼 𜸾𜹃 𜸼𜸼  𜸼 𜸼𜸼 𜸼𜸼 𜸾𜹃 ",
    "            𜸣                     𜸚𜸥 𜹈 𜸞𜸤    ▚▚▚",
    "𜸛𜸤 𜸚𜸧 𜸚𜸥 𜸚𜸥 𜸺  𜸜𜸜 𜸜𜸜 𜸜𜸜 𜸮𜸷 𜸜𜸜 𜸞𜸧  𜸷     𜸮 𜸚𜸟𜹃▚▚▚",
    "𜸨𜹃 𜸾𜸶 𜸼  𜸞𜹃 𜸾𜹃 𜸽𜹄 𜸾𜹃 𜸿𜹆 𜸼𜸼 𜸾𜸶 𜸽𜸥  𜸾𜸥 𜹌 𜸞𜹃    ▚▚▚",
]

A = Matrix{String}(undef, 18, 48)

for (row, ln) in enumerate(s)
    rw = split(ln, "")
    for (n, c) in enumerate(rw)
        A[row, n] = c
    end
end

function getglyph(row, col)
    a = []
    for r in (3row-2):(3row-2)+2
        for g in (3col-2):(3col-2)+2
            push!(a, A[r, g])
        end
    end
    return a
end

# "A" => _buildLargeTypeChar("𜸚𜸟𜸤𜸨𜸟𜸶𜸼 𜸼"),

let
    char = 32
    for row in 1:6
        for col in 1:16
            print("\"$(Char(char))\" => _buildLargeTypeChar(\"")
            g = getglyph(row, col)
            for gl in g
                print(gl)
            end
            println("\"),")
            char += 1
        end
        println()
    end
end
